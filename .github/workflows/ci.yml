name: Build Vite Microfrontends

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm globally via npm
        run: npm install -g pnpm

      - name: Check pnpm version
        run: pnpm --version

      - name: Install dependencies
        run: pnpm install

      # Проверяем изменения в папке apps/host
      - name: Check if host changed
        id: host_changed
        run: |
          echo "changed=$(git diff --name-only ${{ github.sha }} ${{ github.event.before }} | grep '^apps/host/' || true)" >> result.txt
          if [ -s result.txt ]; then
            echo "host_changed=true" >> $GITHUB_OUTPUT
          else
            echo "host_changed=false" >> $GITHUB_OUTPUT
          fi

      # Проверяем изменения в папке apps/remote
      - name: Check if remote changed
        id: remote_changed
        run: |
          echo "changed=$(git diff --name-only ${{ github.sha }} ${{ github.event.before }} | grep '^apps/remote/' || true)" >> result.txt
          if [ -s result.txt ]; then
            echo "remote_changed=true" >> $GITHUB_OUTPUT
          else
            echo "remote_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Build host if changed
        if: steps.host_changed.outputs.host_changed == 'true'
        working-directory: ./apps/host
        run: pnpm install && pnpm build

      - name: Build remote if changed
        if: steps.remote_changed.outputs.remote_changed == 'true'
        working-directory: ./apps/remote
        run: pnpm install && pnpm build

      - name: Prepare deployment
        run: |
          mkdir -p dist
          if [ "${{ steps.host_changed.outputs.host_changed }}" = "true" ]; then
            cp -r apps/host/dist dist/host
          fi
          if [ "${{ steps.remote_changed.outputs.remote_changed }}" = "true" ]; then
            cp -r apps/remote/dist dist/remote
          fi

      - name: Deploy to GitHub Pages
        if: steps.host_changed.outputs.host_changed == 'true' || steps.remote_changed.outputs.remote_changed == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
